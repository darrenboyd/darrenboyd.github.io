<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Darren Boyd</title>
    <description>Developer from San Francisco</description>
    <link>https://darrenboyd.github.io</link>
    <atom:link href="https://darrenboyd.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>The Next Opportunity</title>
        <description>&lt;p&gt;
  &lt;strong&gt;EDIT (Oct 6):&lt;/strong&gt;
  I&#39;m done looking.  Will post a follow-up shortly.
&lt;/p&gt;
&lt;p&gt;
  I&#39;m looking for my next opportunity.  Ideally, the company is in San
  Francisco.  I&#39;m open to remote work, but I&#39;d much rather participate with a
  team directly.  Here are some thoughts on what this next role
  looks like.
&lt;/p&gt;
&lt;!-- fold --&gt;
&lt;h2&gt;The Company&lt;/h2&gt;
&lt;p&gt;
  The ideal company has a fairly direct line between software shipped and
  revenues generated.  I&#39;m not against other business strategies, I just prefer
  a direct product-to-revenue approach (e.g., SAAS over social media).
&lt;/p&gt;
&lt;h2&gt;The Culture&lt;/h2&gt;
&lt;p class=&#39;note&#39;&gt;
  Note that when I say &quot;culture&quot; I mean how a company does its work. Culture is
  not perks, like free lunches or company values. Perks and values are
  important.  However, how a company does its work is critical to success.  See:
  Ben Horowitz&#39;s
  &lt;a href=&quot;http://smile.amazon.com/dp/B00DQ845EA&quot;&gt;&lt;em&gt;The Hard Thing About Hard Things&lt;/em&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
  The right culture is important to me. In software development, culture will
  make or break an organization, especially in startups.
&lt;/p&gt;
&lt;p&gt;
  A good engineering culture looks similar to this&amp;#8230;
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    A development process that mandates transparency (think pull requests).
  &lt;/li&gt;
  &lt;li&gt;
    Automated (or mostly-automated) deployments that treats system changes as
    part of the event stream.
  &lt;/li&gt;
  &lt;li&gt;
    Frequent, small, and low-risk deployments.
  &lt;/li&gt;
  &lt;li&gt;
    Testing discipline that values confidence over coverage.
  &lt;/li&gt;
  &lt;li&gt;
    An operations process that treats configuration as development (DevOps).
  &lt;/li&gt;
  &lt;li&gt;
    Product and Engineering collabarate as distinct skill-sets, but one team.
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
  A broader company-wide culture looks like&amp;#8230;
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    Company success is made up of team, not individual, accomplishments.
  &lt;/li&gt;
  &lt;li&gt;
    All work is defined by the value that it creates.  Developing software is
    about &lt;em&gt;solving problems&lt;/em&gt; more so than &lt;em&gt;building solutions&lt;/em&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;em&gt;See the needle, move the needle&lt;/em&gt;. Further to solving problems, value
    should be measurable.  I believe in the tenets of
    &lt;a href=&quot;http://theleanstartup.com/&quot;&gt;The Lean Startup&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    There are no &lt;em&gt;silos&lt;/em&gt;. Critical business information is transparent
    and available to all.
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Role&lt;/h2&gt;
&lt;p&gt;
  I&#39;ve spent most of my career working for startups.  As a result, I&#39;m able to
  wear many hats, especially in small organizations.  I can hire and manage new
  employees. I can help with the development of the product Roadmap.  I can work
  with support to help customers through problems.  While I am looking for a
  technical role, I have no problem doing all the other work that needs to be
  done.
&lt;/p&gt;
&lt;p&gt;
  At a high-level, I&#39;m a full-stack Rails developer.  I can manage all aspects
  of the Rails stack, from product features, to deployment automation, to
  infrastructure provisioning.  My skills are largely around the backend of
  development.  I am not a designer.  While I can build a UI that works, I am
  not the developer that will make the UI awesome.
&lt;/p&gt;
&lt;p&gt;
  I&#39;ve can also do a number of specialized things.  Too many to list here, my
  resume has more details.  Even more importantly, I&#39;m ready to
  learn new things.
&lt;/p&gt;
&lt;p&gt;
  I tend towards a team-lead role.  I&#39;m fairly outspoken, although I do follow
  the rule of: &quot;strong opinions, loosely held.&quot;  I definitely love to mentor less
  experienced developers, and help them level-up their skills.
&lt;/p&gt;
&lt;h2&gt;The Learning Experience&lt;/h2&gt;
&lt;p&gt;
  The greatest thing of personal value to me is learning new things.  There
  are two areas, specifically, that I would really like to learn more about.
&lt;/p&gt;
&lt;p&gt;
  Marketing and growth analytics.  Sure, call this &quot;growth-hacking&quot;, if you
  want. I&#39;m interested in learning more about it, and collaborating with a
  marketing team to execute growth strategies.
&lt;/p&gt;
&lt;p&gt;
  Quantitative analysis.  Sure, call this &quot;big-data&quot;, if you want.  I would like
  to expand my skills around statistics, and learn more about the programming
  paradigms in that space.
&lt;/p&gt;
&lt;h2&gt;Contact me&lt;/h2&gt;
&lt;p&gt;
  If your team is expanding, and I look interesting, please get in touch.  You can
  reach me at &lt;a href=&quot;mailto:darren.boyd@gmail.com&quot; target=&quot;_blank&quot;&gt;darren.boyd@gmail.com&lt;/a&gt;.
&lt;/p&gt;
&lt;p class=&#39;note&#39;&gt;
  &lt;strong&gt;A note to recruiters:&lt;/strong&gt; If you contact an employer regarding me without
  my explicit permission, I will not work with you.
&lt;/p&gt;
&lt;p class=&#39;note&#39;&gt;
  &lt;strong&gt;A note about employment eligibility:&lt;/strong&gt; As a Canadian, I am qualified to work in
  the USA through NAFTA (specifically,
  &lt;a href=&quot;https://en.wikipedia.org/wiki/TN_status#Canadian_citizens_in_the_United_States&quot;&gt;TN-1 status&lt;/a&gt;).
  It&#39;s a straightforward process, with no cost and little effort required of the
  employer.  I&#39;ve done this a few times in the past 7 years.
&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Sep 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/09/16/the-next-opportunity</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/09/16/the-next-opportunity</guid>
      </item>
    
      <item>
        <title>Moving On</title>
        <description>&lt;p&gt;
  Eighteen months after I began working on Blujack I find myself in the
  unfortunate position of having to move on. It goes without saying that things
  didn&#39;t go according to plan.  Bootstrapping a startup requires a significant
  amount of personal risk.  That risk has become too much for me to bear. As
  I now meet this fate it is crucial to learn as much as possible from the
  experience and move on to something new.
&lt;/p&gt;
&lt;p&gt;
  While these thoughts are my own, I want to call-out my co-founder.
  &lt;a href=&quot;https://www.linkedin.com/in/kevinegge&quot;&gt;Kevin Egge&lt;/a&gt; has been a
  wonderful person to work with in the last 18 months.  It&#39;s also been great
  getting to know him on a personal basis. He has taught me a great many
  things, which is, ultimately, the kindest gift.
&lt;/p&gt;
&lt;p&gt;
  A look-back is useful, to better understand what could have been done better.
&lt;/p&gt;
&lt;h2&gt;The Product&lt;/h2&gt;
&lt;p&gt;
  We built a useful product.  A number of pilot customers got value using our
  product. The product provided some measurable value over the several months
  it takes to plan and coordinate a large group trip. The product provided
  value to travelers, trip planners and other involved parties.
&lt;/p&gt;
&lt;p&gt;
  Given a good product, why wasn&#39;t there any traction?  In a word: Impact. The
  product, in many ways, was only an incremental improvement to an existing
  business process. Instead of going for a 10x improvement, we managed a 10%
  improvement.  We knew going in we needed to make a huge impact, we just
  weren&#39;t able to make that happen.
&lt;/p&gt;
&lt;p&gt;
  Our product was very wide, and not very deep.  Which is to say, we did a
  number of little things reasonably well, but didn&#39;t do anything exceptionally
  well. This made it difficult to achieve the necessary impact to close sales
  and generate strong interest.  It also made the sales process difficult, as
  there was no single feature that would make a splash during a demo.
&lt;/p&gt;
&lt;p&gt;
  Of all the clich√©s about startups, we largely missed on: &quot;do one thing, and
  do it extremely well.&quot;
&lt;/p&gt;
&lt;h2&gt;The Market&lt;/h2&gt;
&lt;p&gt;
  We shifted the product from being consumer-focused to business-focused eight
  months into development. This was in response to a lot of feedback we were
  getting from potential customers. However, we over-estimated our
  understanding of the enterprise market for a product like ours. Our lack of
  specific domain-knowledge around corporate group travel was a significant
  issue.
&lt;/p&gt;
&lt;h2&gt;The Process&lt;/h2&gt;
&lt;p&gt;
  Our development process was effective.  We were able to make product changes
  and ship new features quickly.  While the codebase was somewhat &#39;prototype
  quality&#39;, we didn&#39;t spend a lot of time fixing broken deployments. For the
  most part, we were able to build and ship things fast enough to be
  successful.
&lt;/p&gt;
&lt;p&gt;
  Our founding team didn&#39;t include a designer.  I have a reasonable amount of
  skill to make things look &lt;em&gt;nice&lt;/em&gt;, but not enough skill to make things
  look &lt;em&gt;awesome&lt;/em&gt;. Having fulltime web design skills would have helped
  a great deal.  (we did have a contracted designer,
  &lt;a href=&quot;http://www.joeygolaw.com/&quot;&gt;Joey Golaw&lt;/a&gt;, who did a great job, with
  the time he was given.)
&lt;/p&gt;
&lt;h2&gt;The Team&lt;/h2&gt;
&lt;p&gt;
  This startup was never just me and Kevin.  We were fortunate to have a number
  of people helping us right from the start.  My sincere thanks goes out to all
  of my close friends who provided invaluable time, input and support.  I
  especially want to thank my engineering friends who contributed a lot of
  their personal time to help build our mobile applications.
&lt;/p&gt;
&lt;p&gt;
  Not sure how long this link will work, but you can see more
  of our team details here: &lt;a href=&quot;https://www.blujack.com/about-us&quot;&gt;About Blujack&lt;/a&gt;.
&lt;/p&gt;
&lt;h2&gt;The Future&lt;/h2&gt;
&lt;p&gt;
  Companies can survive the loss of people,  but a company as young as Blujack
  probably can&#39;t survive the loss of a founder.  Still, the product exists.
  There is a market that is interested, and can benefit from it.  Which means,
  there is still a sliver of hope that there might be a future for it. I wish
  it all the best.
&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Sep 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/09/15/moving-on-from-blujack</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/09/15/moving-on-from-blujack</guid>
      </item>
    
      <item>
        <title>Elixir</title>
        <description>&lt;p&gt;
  With the elixir-lang 1.0.0 release
  &lt;a href=&quot;https://github.com/elixir-lang/elixir/commit/52ff7e96867c027745d29f5d3feb77f546f22c4f&quot;&gt;approaching&lt;/a&gt;,
  I thought I&#39;d jump in and get better acquainted with the language.
  First, a huge thanks to Jose and everyone involved with elixir.  As
  much for creating a great new language, but also for giving me more
  motivation to read my &lt;em&gt;Programming Erlang&lt;/em&gt; book &lt;img class=&#39;emoji&#39; title=&#39;:grinning:&#39; alt=&#39;:grinning:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f600.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.
&lt;/p&gt;
&lt;p&gt;
  Here are a few first things in learning the language...
&lt;/p&gt;
&lt;h2&gt;Interactive Elixir: iex&lt;/h2&gt;
&lt;p&gt;
  Having an interactive mode is incredible.  I&#39;ve so use to irb (interactive ruby)
  for so long, I was thrilled to see this available for elixir.
&lt;/p&gt;
&lt;img alt=&#39;iex in the terminal&#39; src=&#39;/images/2014-09-11-elixir/iex.png&#39;&gt;
&lt;p&gt;
  The first struggle was trying to quit iex.  I was so used to
  &lt;code&gt;ctrl-d&lt;/code&gt;
  working, I was quite surprised when it didn&#39;t work.  Instead, to quit
  iex it&#39;s &lt;code&gt;ctrl-g q &amp;lt;enter&amp;gt;&lt;/code&gt;.  I&#39;m guessing
  there&#39;s more to that than meets the eye.
&lt;/p&gt;
&lt;h2&gt;help within iex&lt;/h2&gt;
&lt;p&gt;
  &lt;strong&gt;This is awesome&lt;/strong&gt;, the language documentation is available
  within iex.
&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;iex(10)&amp;gt; h is_boolean/1

    def is_boolean(term)

 Returns true if term is either the atom true or the atom false (i.e. a
 boolean); otherwise returns false.

 Allowed in guard tests. Inlined by the compiler.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
  The &lt;code&gt;h is_boolean/1&lt;/code&gt; means: &#39;help on function is_boolean
  with arity 1.
&lt;/p&gt;
&lt;p&gt;
  The help has tab completion too...
&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;iex(27)&amp;gt; h is_&amp;lt;tab&amp;gt;
is_atom/1         is_binary/1       is_bitstring/1    is_boolean/1
is_float/1        is_function/1     is_function/2     is_integer/1
is_list/1         is_map/1          is_number/1       is_pid/1
is_port/1         is_reference/1    is_tuple/1
iex(27)&amp;gt; h is_&amp;lt;cursor&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
  The arity isn&#39;t required for getting help.  And, when not given for something
  that has multiple signatures (or whatever elixir calls them), will show
  all matches.  E.g., &lt;code&gt;h is_function&lt;/code&gt; will display help for both
  the arity 1 and arity 2 versions.
&lt;/p&gt;
&lt;h2&gt;Still Learning&lt;/h2&gt;
&lt;p&gt;
  I&#39;m just getting started, but it&#39;s fun to learn a language that gives you
  approachable tools, like iex, to play with.  Next up is to figure out why this
  works, and why I should know why it works...
&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;ni&quot;&gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
  Check it &lt;a href=&quot;http://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt;.  If you want high
  level information, check out the &lt;a href=&quot;http://www.confreaks.com/events/elixirconf2014&quot;&gt;
  Elixir Conf videos&lt;/a&gt;.
&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Sep 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/09/11/elixir</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/09/11/elixir</guid>
      </item>
    
      <item>
        <title>The Rails Stack</title>
        <description>&lt;p&gt;This is a quick overview of what the Rails stack looks like
in a &lt;em&gt;typical&lt;/em&gt; production environment.&lt;/p&gt;

&lt;!-- fold --&gt;

&lt;h2 id=&quot;things-that-arent-covered&quot;&gt;Things that aren‚Äôt covered&lt;/h2&gt;

&lt;h3 id=&quot;machine-provisioning&quot;&gt;Machine Provisioning&lt;/h3&gt;

&lt;p&gt;How a machine gets built is a significant variable. Provisioning largely
depends on where you are, and what scale your system is at.  I.e.,
whether or not you are on a cloud provider, which one, and what system
provisioning tools you use (e.g., chef or puppet).  This article assumes
a machine is in place, and will not cover how to bring one into
existance.&lt;/p&gt;

&lt;h3 id=&quot;code-deployment&quot;&gt;Code Deployment&lt;/h3&gt;

&lt;p&gt;How application code gets deployed varies as much as provisioning.
Quite often, provisioning requirements will dictate how the code is
deployed.  While deployment is a critical subject, this article only
talks about what the stack looks like &lt;strong&gt;after&lt;/strong&gt; deployment.  I.e., we
will describe here what the target of deployment is.&lt;/p&gt;

&lt;h2 id=&quot;the-application-server&quot;&gt;The Application Server&lt;/h2&gt;

&lt;p&gt;The application server is responsible for running one or more processes.
A few to choose from include &lt;a href=&quot;http://puma.io/&quot;&gt;Puma&lt;/a&gt;,
&lt;a href=&quot;http://unicorn.bogomips.org/&quot;&gt;Unicorn&lt;/a&gt; and
&lt;a href=&quot;https://www.phusionpassenger.com/&quot;&gt;Phusion Passenger&lt;/a&gt;.
In this article, I will talk specifically about Puma.&lt;/p&gt;

&lt;h3 id=&quot;puma&quot;&gt;Puma&lt;/h3&gt;

&lt;p&gt;Puma can manage more than one process, and any number of threads per
process.  It is designed to be performant via parallelism. Using Puma to
start multiple processes reduces the burden on the system startup
scripts of doing the same.&lt;/p&gt;

&lt;p&gt;Puma is easy to configure, and the configuration can be source
controlled.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;config&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;‚îú‚îÄ‚îÄ puma&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;‚îÇ¬†¬† ‚îú‚îÄ‚îÄ development.rb&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;‚îÇ¬†¬† ‚îî‚îÄ‚îÄ production.rb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since the configuration files are simply ruby code, you can choose to
let the environment override anything.  Here‚Äôs an example of what the
&lt;code&gt;config/puma/production.rb&lt;/code&gt; file might look like.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;workers&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PUMA_WORKERS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;threads&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PUMA_THREADS_MIN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PUMA_THREADS_MAX&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More detail information about configuring Puma can be found in the
project‚Äôs &lt;a href=&quot;https://github.com/puma/puma&quot;&gt;README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Utilizing the default directory structure for Puma configuration, the
startup command will be simple. Just pass Puma the &lt;code&gt;-e &amp;lt;environment&amp;gt;&lt;/code&gt;
flag, so it knows what configuration file to load.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;puma -e &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RACK_ENV&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;note-multiple-processes-and-reverse-proxies&quot;&gt;NOTE: Multiple Processes and Reverse Proxies&lt;/h4&gt;

&lt;p&gt;Even when using multiple worker processes with Puma, it will open a
single port (or socket, depending on your configuration), and pass the
request through to forked child processes.  If there is a reverse proxy
setup, it‚Äôs only necessary to forward the requests to a single location
per machine.&lt;/p&gt;

&lt;h2 id=&quot;application-server-startup&quot;&gt;Application Server Startup&lt;/h2&gt;

&lt;p&gt;Typically, the app server is not run manually.  Instead a specialized
system level process will take care of running it, allowing for proper
restarts on failure, or monitoring of resources like memory.&lt;/p&gt;

&lt;p&gt;A couple of popular options are monit and upstart.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mmonit.com/monit/&quot;&gt;http://mmonit.com/monit/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://upstart.ubuntu.com/&quot;&gt;http://upstart.ubuntu.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting application server processes has more to do with system
provisioning than with the Rails stack.  Generally, you will want to
ensure processes are started at the appropriate time, that resource
usage (e.g., memory and CPU) is monitored and that any unexpected exit
from a process is handled properly.&lt;/p&gt;

&lt;h4 id=&quot;note-foreman&quot;&gt;NOTE: Foreman&lt;/h4&gt;

&lt;p&gt;In some cases it can be useful to manage the startup of your application
processes. For example, when there is more than one process to start
(e.g., the web server, and a background worker). The Foreman tool
provides a simple way to manage this.&lt;/p&gt;

&lt;p&gt;Foreman can be especially useful in the development environment, to keep
multiple processes running in a single terminal window.&lt;/p&gt;

&lt;p&gt;Foreman can also be used to create upstart or init scripts, instead of
using it directly to run commands.&lt;/p&gt;

&lt;p&gt;All-in-all, Foreman is worth looking at if your application startup is
getting complicated.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.daviddollar.org/2011/05/06/introducing-foreman.html&quot;&gt;http://blog.daviddollar.org/2011/05/06/introducing-foreman.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-reverse-proxy&quot;&gt;A Reverse Proxy&lt;/h2&gt;

&lt;p&gt;In many cases it is common to run a reverse proxy on every application
server machine (or virtual machine).  Rails applications often include a
lot of static assets (images, css, etc.). Something like Apache or Nginx
does a much better job of serving requests for these assets directly
rather than running the requests through the Rails process.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;public/assets&lt;/code&gt; directories can be handled immediately
by a reverse proxy, and every other request can be passed to the Rails
application server.&lt;/p&gt;

&lt;p&gt;While running a reverse proxy could be considered &lt;em&gt;best practice&lt;/em&gt;, it
isn‚Äôt always necessary, depending on your situation.&lt;/p&gt;

&lt;p&gt;For example, if your application is configured with an &lt;code&gt;asset_host&lt;/code&gt; that
points at a CDN, then you can get away with serving static assets
directly from Rails, since they will then be cached and served by the
CDN‚Äôs edge network, offloading the vast majority of the requests to
them.&lt;/p&gt;

&lt;h2 id=&quot;application-configuration&quot;&gt;Application Configuration&lt;/h2&gt;

&lt;p&gt;Configuring Rails applications continually changes (and improves) as
Rails grows older. Here are a few goals that are worthy of achieving,
that should help form a perspective on how configuration should be
accomplished.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When a new developer checks out the codebase for the first time,
they should get a running system with two commands‚Ä¶&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;script/bootstrap
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./bin/rails server &lt;span class=&quot;c&quot;&gt;# or similar, like...&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;foreman start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While the idea behind &lt;code&gt;script/bootstrap&lt;/code&gt; is outside the scope of this
post, this goal is worth noting as it means the application should run
with appropriate defaults set for all configuration values.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Configuration should be source-controlled, ideally with your
application source (notable exception being credentials).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means there‚Äôs a history of configuration changes that can be
inspected over time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication tokens come from the environment, and are never
source controlled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This includes third-party API keys, database passwords, etc.&lt;/p&gt;

&lt;p&gt;With these goals in mind, here is a high-level view of configuring a
Rails application.&lt;/p&gt;

&lt;h3 id=&quot;environment-configuration&quot;&gt;Environment Configuration&lt;/h3&gt;

&lt;p&gt;In &lt;code&gt;config/environments/&lt;/code&gt; there are several files that configure Rails
itself.  The &lt;a href=&quot;http://guides.rubyonrails.org/configuring.html&quot;&gt;Rails Guides&lt;/a&gt;
covers these more fully.&lt;/p&gt;

&lt;p&gt;One important detail about these files is that they should not contain
any credentials (e.g., a password for a mail server).  Instead,
credentials are managed in the &lt;code&gt;config/secrets.yaml&lt;/code&gt; file (see below).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;config/environments/production.rb&lt;/code&gt; file has a few important details
that relate to the production stack.  The &lt;code&gt;serve_static_assets&lt;/code&gt; and the
&lt;code&gt;x_sendfile_header&lt;/code&gt; should be set depending on whether or not you setup
a reverse proxy on the local machine.  The default is to &lt;strong&gt;not&lt;/strong&gt; serve
static files (i.e., you &lt;strong&gt;are&lt;/strong&gt; using a reverse proxy).&lt;/p&gt;

&lt;p&gt;If instead you want to serve static files through Rails, make these
changes‚Ä¶&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serve_static_assets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_dispatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_sendfile_header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;secrets&quot;&gt;Secrets&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;config/secrets.yml&lt;/code&gt; file is a convenient place to store and manage
configuration information.  It‚Äôs an environment sensitive yaml file,
that is evaluated with ERB, so you can bring in values set by the
system.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;secret_key_base&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV.fetch(&amp;#39;SECRET_KEY_BASE&amp;#39;) %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;mail_server_password&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV.fetch(&amp;#39;MAIL_SERVER_PASSWORD&amp;#39;) %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that contrary to what the name of the file implies, you can put any
configuration value you want in this file, and they aren‚Äôt required to
be &lt;em&gt;secret&lt;/em&gt;.  For example, if you wanted information about a third party
API to be kept in one place‚Ä¶&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;awesome_api_host&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;api.thirdparty.com&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;awesome_api_username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV.fetch(&amp;#39;AWESOME_API_USERNAME&amp;#39;) %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;awesome_api_password&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV.fetch(&amp;#39;AWESOME_API_PASSWORD&amp;#39;) %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;databaseyml&quot;&gt;&lt;em&gt;database.yml&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;config/database.yml&lt;/code&gt; file can be treated the same as the secrets
file.  In the latest version of Rails, a database configuration can be
provided with a &lt;code&gt;URL&lt;/code&gt;, making it a single entry.  E.g.,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;reconnect&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# expecting 8 threads per process&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV.fetch(&amp;#39;DATABASE_URL&amp;#39;) %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# example value:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#   postgres://username:password@database.host.com:&amp;lt;port&amp;gt;/database_name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;logging&quot;&gt;Logging&lt;/h2&gt;

&lt;p&gt;Application logs should be treated as an event stream*. Your production
application server logs should be sent to that event stream, along with
any other data. This can be done through system level things like syslog
or with a third-party provider (e.g., &lt;a href=&quot;https://papertrailapp.com/&quot;&gt;Papertrail&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;*see &lt;a href=&quot;http://12factor.net/&quot;&gt;The Twelve-Factor App&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h2&gt;

&lt;p&gt;Hopefully this post has improved your understanding of what a production
Rails stack might look like.&lt;/p&gt;

&lt;p&gt;Please send me all feedback (see the footer for contact info).&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Sep 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/09/03/the-rails-stack</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/09/03/the-rails-stack</guid>
      </item>
    
      <item>
        <title>Ninefold</title>
        <description>&lt;p&gt;I decided to spend some time playing around with the hosting service
from &lt;a href=&quot;https://ninefold.com/&quot;&gt;Ninefold&lt;/a&gt;.  Their offering looks great,
with excellent pricing. They seem as simple to use as Heroku, but you
can still get to control an actual &lt;em&gt;server&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Signup is easy.  They give you 30 days before requiring billing
information.  After the 30 days, you still get the first $50 waived.
It‚Äôs a very frictionless activation process, and well worth the effort
to get a ‚Äòmachine in the cloud‚Äô.&lt;/p&gt;

&lt;p&gt;Launching a machine was super easy.  I managed to get a virtual machine
running with almost no typing (I had to name the machine).  I‚Äôm
impressed by the simplicity of it.  Eventually, I got to a page showing
progress‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014-08-26/provision-simple-machine.png&quot; alt=&quot;provisioning progress&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The yellow highlight is mine.  I wanted to call-out the monthly price
of the server, of which the first $50 a month is waived.  I.e., it‚Äôs free.&lt;/p&gt;

&lt;p&gt;After the provisioning was complete I got an email from ninefold
with a password for the machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014-08-26/emailed-password.png&quot; alt=&quot;provisioning progress&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My first reaction to seeing a password in an email was to cry
out in pain.  Admittedly, this is a very simple way to provide
initial credentials, and I was immediately able to change it. I
also setup SSH keys to avoid typing a password at all.&lt;/p&gt;

&lt;p&gt;With very little effort, and no real cost, I now have a little virtual
machine running in the cloud.  Ninefold seems to give the simplicity
of Heroku, but you get much more control of deployed resources. It‚Äôs
definitely worth a try if you are interested.&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Aug 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/08/26/ninefold</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/08/26/ninefold</guid>
      </item>
    
      <item>
        <title>Hello, is this thing on?</title>
        <description>&lt;p&gt;I‚Äôm trying this blogging thing out again.  I heard it‚Äôs popular.
That‚Äôs assuming I can find a way to write something compelling.
I believe that means I need to practise at it &lt;img class=&quot;emoji&quot; title=&quot;:grin:&quot; alt=&quot;:grin:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f601.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;.&lt;/p&gt;

&lt;p&gt;Props to contributors of &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; as well as
&lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;Jekyll Now&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Aug 2014 00:00:00 -0700</pubDate>
        <link>https://darrenboyd.github.io/posts/2014/08/10/Hello-is-this-thing-on</link>
        <guid isPermaLink="true">https://darrenboyd.github.io/posts/2014/08/10/Hello-is-this-thing-on</guid>
      </item>
    
  </channel>
</rss>